name: test_backend

on: [push]

jobs:
  test_backend:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: know_your_planet
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: "${{ secrets.GITHUB_TOKEN }}"
  
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
        
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install backend dependencies
        run: pip install -r requirements.txt

      - name: Run flake8 linting
        run: python -m flake8

      - name: Run tests
        run: python manage.py test
        env:
          DEBUG: True
          SECRET_KEY: github_workflow
          HOST: localhost
          DATABASE_URL: postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/know_your_planet
          SESSION_COOKIE_SECURE: "False"
          CSRF_COOKIE_SECURE: "False"
          SECURE_HSTS_SECONDS: 0
          SECURE_SSL_REDIRECT: "False"

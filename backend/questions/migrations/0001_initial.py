# Generated by Django 4.0.3 on 2022-03-30 22:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("tags", "0001_initial"),
        ("categories", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("text", models.TextField(help_text="La question en 1 ou 2 phrases")),
                ("hint", models.TextField(blank=True, help_text="Un indice (optionnel)")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("QCM", "Questionnaire à choix multiples"),
                            ("QCM-RM", "Questionnaire à choix multiples avec réponses multiples"),
                            ("VF", "Vrai ou Faux"),
                        ],
                        default="QCM",
                        help_text="Le type de question (QCM, V/F, ...)",
                        max_length=50,
                    ),
                ),
                (
                    "difficulty",
                    models.IntegerField(
                        choices=[(0, "Junior"), (1, "Facile"), (2, "Moyen"), (3, "Difficile"), (4, "Expert")],
                        default=1,
                        help_text="Le niveau de difficulté de la question",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("Français", "Français"), ("English", "English")],
                        default="Français",
                        help_text="La langue de la question",
                        max_length=50,
                    ),
                ),
                ("answer_option_a", models.CharField(blank=True, help_text="La réponse a", max_length=500)),
                ("answer_option_b", models.CharField(blank=True, help_text="La réponse b", max_length=500)),
                ("answer_option_c", models.CharField(blank=True, help_text="La réponse c", max_length=500)),
                ("answer_option_d", models.CharField(blank=True, help_text="La réponse d", max_length=500)),
                (
                    "answer_correct",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("a", "a"),
                            ("b", "b"),
                            ("c", "c"),
                            ("d", "d"),
                            ("ab", "ab"),
                            ("ac", "ac"),
                            ("ad", "ad"),
                            ("bc", "bc"),
                            ("bd", "bd"),
                            ("cd", "cd"),
                            ("abc", "abc"),
                            ("abd", "abd"),
                            ("acd", "acd"),
                            ("bcd", "bcd"),
                            ("abcd", "abcd"),
                        ],
                        help_text="a, b, c ou d. ab, acd, abcd, etc si plusieurs réponses.",
                        max_length=50,
                    ),
                ),
                (
                    "has_ordered_answers",
                    models.BooleanField(
                        default=True,
                        help_text="Les choix de réponse sont dans un ordre figé, et ne doivent pas être mélangés",
                    ),
                ),
                ("answer_explanation", models.TextField(blank=True, help_text="Un petit texte d'explication")),
                ("answer_audio", models.URLField(blank=True, help_text="Une explication audio", max_length=500)),
                ("answer_video", models.URLField(blank=True, help_text="Une explication vidéo", max_length=500)),
                (
                    "answer_accessible_url",
                    models.URLField(blank=True, help_text="Un lien pour aller plus loin", max_length=500),
                ),
                (
                    "answer_accessible_url_text",
                    models.CharField(
                        blank=True, help_text="Le texte pour remplace l'affichage du lien", max_length=500
                    ),
                ),
                (
                    "answer_scientific_url",
                    models.URLField(
                        blank=True, help_text="La source scientifique du chiffre (rapport)", max_length=500
                    ),
                ),
                (
                    "answer_scientific_url_text",
                    models.CharField(
                        blank=True,
                        help_text="Le texte pour remplace l'affichage du lien de la source scientifique",
                        max_length=500,
                    ),
                ),
                (
                    "answer_reading_recommendation",
                    models.TextField(blank=True, help_text="Un livre pour aller plus loin"),
                ),
                (
                    "answer_image_url",
                    models.URLField(
                        blank=True,
                        help_text="Un lien vers une image pour illustrer la réponse (idéalement avec la source indiquée en bas de l'image)",  # noqa
                        max_length=500,
                    ),
                ),
                (
                    "answer_image_explanation",
                    models.TextField(blank=True, help_text="Une légende pour l'image qui illustre la réponse"),
                ),
                (
                    "answer_extra_info",
                    models.TextField(
                        blank=True,
                        help_text="Texte et liens explicatifs additionels, qui n'apparaissent pas dans l'interface",
                    ),
                ),
                ("author", models.CharField(blank=True, help_text="L'auteur de la question", max_length=50)),
                (
                    "validator",
                    models.CharField(blank=True, help_text="La personne qui a validée la question", max_length=50),
                ),
                (
                    "validation_status",
                    models.CharField(
                        choices=[
                            ("Brouillon", "Brouillon"),
                            ("A valider", "A valider"),
                            ("Validée", "Validée"),
                            ("Écartée temporairement", "Écartée temporairement"),
                            ("Écartée", "Écartée"),
                        ],
                        default="Brouillon",
                        help_text="Le statut de la question dans le workflow de validation",
                        max_length=150,
                    ),
                ),
                ("added", models.DateField(blank=True, help_text="La date d'ajout de la question", null=True)),
                ("created", models.DateField(auto_now_add=True, help_text="La date de création de la question")),
                ("updated", models.DateField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Une seule catégorie possible",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="questions",
                        to="categories.category",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Un ou plusieurs tags rattaché à la question",
                        related_name="questions",
                        to="tags.tag",
                    ),
                ),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Questions",
                "ordering": ["pk"],
            },
        ),
    ]
